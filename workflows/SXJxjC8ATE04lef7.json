{"createdAt":"2025-08-13T09:13:53.098Z","updatedAt":"2025-09-22T07:23:06.735Z","id":"SXJxjC8ATE04lef7","name":"Search BunkerWeb through X","active":true,"isArchived":false,"nodes":[{"parameters":{"rule":{"interval":[{"triggerAtHour":13}]}},"type":"n8n-nodes-base.scheduleTrigger","typeVersion":1.2,"position":[-3104,-368],"id":"8083595f-610b-485f-a38e-23061990e9be","name":"Every day"},{"parameters":{"url":"https://api.x.com/2/tweets/search/recent","authentication":"predefinedCredentialType","nodeCredentialType":"twitterOAuth2Api","sendQuery":true,"queryParameters":{"parameters":[{"name":"query","value":"(\"BunkerWeb\") -is:retweet -from:bunkerity"},{"name":"max_results","value":"100"},{"name":"tweet.fields","value":"id,text,created_at,public_metrics,entities,author_id,referenced_tweets,note_tweet,context_annotations,attachments,conversation_id,source,possibly_sensitive"},{"name":"expansions","value":"author_id,referenced_tweets.id,attachments.media_keys"},{"name":"user.fields","value":"id,username,name,created_at,public_metrics,verified"},{"name":"media.fields","value":"media_key,preview_image_url,url,variants,type,width,height,duration_ms,public_metrics"}]},"options":{"response":{"response":{"neverError":true}}}},"type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[-2880,-368],"id":"7d525abb-086d-423a-93c5-aeb9f8f12c15","name":"Fetch the last 100 tweets containing the BunkerWeb keyword","credentials":{"twitterOAuth2Api":{"id":"qnc1qWIfHg6xZRoi","name":"X account - main"}}},{"parameters":{"options":{}},"type":"n8n-nodes-base.splitInBatches","typeVersion":3,"position":[-1312,212],"id":"16d2018e-e2fc-4200-9554-334830d4589d","name":"Loop Over entities"},{"parameters":{"content":"### 📝 Create a summary from the tweet using Gemini 2.5 flash and fallback to llama3.2.","height":448,"width":784,"color":5},"type":"n8n-nodes-base.stickyNote","position":[208,60],"typeVersion":1,"id":"01489173-a488-4c36-887b-595259a406ad","name":"Sticky Note"},{"parameters":{"content":"## ⏳ Handle Gemini 2.5 flash API rate limit (10 requests per minute).","height":640,"width":1520,"color":4},"type":"n8n-nodes-base.stickyNote","position":[-1352,-148],"typeVersion":1,"id":"bc3cdcc7-76ab-4d75-9d15-1426d9c3ec2b","name":"Sticky Note1"},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"loose","version":2},"conditions":[{"id":"7cad6d4b-88fa-41fd-8b1c-49251513eb17","leftValue":"={{ $json.in_cache }}","rightValue":"=1","operator":{"type":"string","operation":"notEquals"}}],"combinator":"and"},"looseTypeValidation":true,"options":{}},"type":"n8n-nodes-base.filter","typeVersion":2.2,"position":[-1760,-368],"id":"62f57215-b70f-419e-a581-8995138ee101","name":"Hasn't been processed already"},{"parameters":{"operation":"get","propertyName":"in_cache","key":"=twitter_{{ $json.id }}","options":{}},"type":"n8n-nodes-base.redis","typeVersion":1,"position":[-2208,-224],"id":"55a3bef9-b2a4-438f-9498-fff34dc0cf77","name":"Get cached ID","credentials":{"redis":{"id":"AfgIqWjfLKZzroBz","name":"Redis db 1"}}},{"parameters":{"mode":"combine","combineBy":"combineByPosition","options":{}},"type":"n8n-nodes-base.merge","typeVersion":3.2,"position":[-1984,-368],"id":"4c9b6a97-36ac-4575-9c6e-2b67947233dc","name":"Merge cached response and entity"},{"parameters":{"content":"## 💾 Filter already processed tweets.","height":352,"width":640,"color":3},"type":"n8n-nodes-base.stickyNote","position":[-2256,-416],"typeVersion":1,"id":"1e3ac451-d90d-4188-87ea-d2557d73130f","name":"Sticky Note3"},{"parameters":{"sortFieldsUi":{"sortField":[{"fieldName":"created_at"}]},"options":{}},"type":"n8n-nodes-base.sort","typeVersion":1,"position":[-416,-416],"id":"953203a8-cd87-4595-bf59-6d4146bbd66b","name":"Sort by creation date"},{"parameters":{"mode":"combine","combineBy":"combineByPosition","options":{}},"type":"n8n-nodes-base.merge","typeVersion":3.2,"position":[-1088,-560],"id":"25d45cf9-19da-4650-97b3-355cf9ae4a56","name":"Merge summary"},{"parameters":{"authentication":"webhook","content":"=","options":{"wait":true},"embeds":{"values":[{"description":"={{ $json.summary }}","author":"={{ $json.author.username }}","color":"#14171A","timestamp":"={{ $json.created_at }}","title":"🐦 New X mention!","url":"=https://x.com/{{ $json.author.username }}/status/{{ $json.id }}\n"}]}},"type":"n8n-nodes-base.discord","typeVersion":2,"position":[32,-416],"id":"e4b49700-de48-4740-bdbc-475ec353bd52","name":"Alert discord","webhookId":"24990fec-b92a-4de4-9348-933779f8ebfe","retryOnFail":true,"waitBetweenTries":5000,"credentials":{"discordWebhookApi":{"id":"2oqKEjJqfEfwORxZ","name":"Discord Webhook social alerts"}}},{"parameters":{"options":{}},"type":"n8n-nodes-base.splitInBatches","typeVersion":3,"position":[-192,-416],"id":"08e1c117-2e27-4983-9055-4cfd799a67f1","name":"Loop Over Items"},{"parameters":{"amount":1},"type":"n8n-nodes-base.wait","typeVersion":1.1,"position":[1072,-464],"id":"53d56d03-b808-4ffd-b223-38bf7b37de2e","name":"Wait 1 second","webhookId":"3f30b243-cae7-43b3-9274-0f852e35b9dc"},{"parameters":{"content":"## 📨 Inform the Bunker team on Discord and save processed entities in the cache","height":416,"width":1488,"color":6},"type":"n8n-nodes-base.stickyNote","position":[-256,-672],"typeVersion":1,"id":"ad86f000-c676-44e0-8356-c95a614ee95b","name":"Sticky Note2"},{"parameters":{"operation":"set","key":"=twitter_{{ $json.id }}","value":"1","expire":true,"ttl":"={{ DateTime.fromSeconds(0).plus(1, \"month\").toSeconds() }}"},"type":"n8n-nodes-base.redis","typeVersion":1,"position":[848,-536],"id":"4ebe971f-32e3-4bf2-a3cc-ee0217209d72","name":"Save processed ID","credentials":{"redis":{"id":"AfgIqWjfLKZzroBz","name":"Redis db 1"}}},{"parameters":{"sessionIdType":"customKey","sessionKey":"session_twitter"},"type":"@n8n/n8n-nodes-langchain.memoryRedisChat","typeVersion":1.5,"position":[512,364],"id":"ee1958cb-5907-4bf7-b0a5-581708c1420b","name":"Redis","credentials":{"redis":{"id":"AfgIqWjfLKZzroBz","name":"Redis db 1"}}},{"parameters":{"query":"={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Query', ``, 'string') }}","options":{}},"type":"@tavily/n8n-nodes-tavily.tavilyTool","typeVersion":1,"position":[640,364],"id":"abbd4ab2-995f-483b-8f9d-aada6d65bf2e","name":"Tavily search","credentials":{"tavilyApi":{"id":"CpAx4VhG0PmKrOZR","name":"Tavily account - GitHub"}}},{"parameters":{"keys":{"key":[{"currentKey":"output","newKey":"summary"}]},"additionalOptions":{}},"type":"n8n-nodes-base.renameKeys","typeVersion":1,"position":[848,264],"id":"a2aacdb3-83ee-491f-8077-56dab2524836","name":"Rename output -> summary"},{"parameters":{"assignments":{"assignments":[{"id":"955d62d6-8516-4ba3-85ff-1c9d16cc679c","name":"created_at","value":"={{ DateTime.fromISO($json.created_at) }}","type":"string"}]},"includeOtherFields":true,"options":{}},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[-640,-416],"id":"62426210-30f9-4c5e-a0bd-ac49bf5eff76","name":"Convert date string to datetime"},{"parameters":{"mode":"combine","combineBy":"combineByPosition","options":{"clashHandling":{"values":{"resolveClash":"preferInput1"}}}},"type":"n8n-nodes-base.merge","typeVersion":3.2,"position":[440,-536],"id":"0fa06199-7eee-4d92-bd38-ffecebe09342","name":"Merge tweet data with discord response"},{"parameters":{"jsCode":"// n8n Code node\nreturn $input.all().flatMap((item) => {\n  const entry = item.json ?? {};\n\n  // Lookups\n  const usersById = Object.fromEntries((entry.includes?.users ?? []).map(u => [u.id, u]));\n  const tweetsById = Object.fromEntries((entry.includes?.tweets ?? []).map(t => [t.id, t]));\n  const mediaByKey = Object.fromEntries((entry.includes?.media ?? []).map(m => [m.media_key, m]));\n\n  // Map each tweet -> one output item\n  return (entry.data ?? []).map((t) => {\n    const user = usersById[t.author_id] ?? {};\n\n    // Resolve media\n    const mediaKeys = t.attachments?.media_keys ?? [];\n    const media = mediaKeys\n      .map((k) => {\n        const m = mediaByKey[k];\n        if (!m) return null;\n\n        if (m.type === \"video\") {\n          const mp4s = (m.variants ?? []).filter(v => v.content_type === \"video/mp4\");\n          const best = mp4s.sort((a, b) => (b.bit_rate ?? 0) - (a.bit_rate ?? 0))[0] ?? null;\n          return {\n            type: \"video\",\n            url: best?.url ?? null,\n            bit_rate: best?.bit_rate ?? null,\n            preview_image_url: m.preview_image_url ?? null,\n            height: m.height ?? null,\n            width: m.width ?? null,\n            view_count: m.public_metrics?.view_count ?? null,\n          };\n        }\n\n        // photo/gif or others\n        return {\n          type: m.type,\n          url: m.url ?? null,\n          preview_image_url: m.preview_image_url ?? null,\n          height: m.height ?? null,\n          width: m.width ?? null,\n        };\n      })\n      .filter(Boolean);\n\n    // Resolve referenced tweets (e.g., replied_to)\n    const referenced = (t.referenced_tweets ?? []).map((ref) => {\n      const rt = tweetsById[ref.id];\n      const rauthor = rt ? usersById[rt.author_id] : undefined;\n      return {\n        type: ref.type,\n        id: ref.id,\n        text: rt?.text ?? null,\n        author: rt\n          ? {\n              id: rauthor?.id ?? null,\n              username: rauthor?.username ?? null,\n              name: rauthor?.name ?? null,\n              verified: rauthor?.verified ?? false,\n            }\n          : null,\n      };\n    });\n\n    return {\n      json: {\n        id: t.id,\n        text: t.text,\n        created_at: t.created_at,\n        conversation_id: t.conversation_id ?? null,\n        possibly_sensitive: t.possibly_sensitive ?? false,\n        metrics: t.public_metrics ?? {},\n        hashtags: t.entities?.hashtags?.map((h) => h.tag) ?? [],\n        urls: t.entities?.urls ?? [],\n        author: {\n          id: user.id ?? null,\n          username: user.username ?? null,\n          name: user.name ?? null,\n          verified: user.verified ?? false,\n          followers: user.public_metrics?.followers_count ?? 0,\n          following: user.public_metrics?.following_count ?? 0,\n          tweet_count: user.public_metrics?.tweet_count ?? 0,\n          like_count: user.public_metrics?.like_count ?? 0,\n          account_created_at: user.created_at ?? null,\n        },\n        media,\n        referenced_tweets: referenced,\n      },\n    };\n  });\n});\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[-2656,-368],"id":"84703c3c-cd7f-4cbf-b1e8-db0ca4c06fce","name":"Parse tweets"},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"loose","version":2},"conditions":[{"id":"8152c702-f81c-471b-a7bc-33c4fedc9593","leftValue":"={{ $json.text.length }}","rightValue":1950,"operator":{"type":"number","operation":"lte"}}],"combinator":"and"},"looseTypeValidation":true,"options":{}},"type":"n8n-nodes-base.if","typeVersion":2.2,"position":[-1536,-368],"id":"47e27d7a-17f7-4ef4-9198-e76d10f540e0","name":"If total is under 1950 chars"},{"parameters":{"model":"llama3.2:3b","options":{"lowVram":true,"useMLock":true,"useMMap":true}},"type":"@n8n/n8n-nodes-langchain.lmChatOllama","typeVersion":1,"position":[384,364],"id":"a1d8c983-265a-4951-b77e-e01e18990b74","name":"llama3.2","credentials":{"ollamaApi":{"id":"1LHuJ7liAjGaSUJT","name":"Ollama account"}}},{"parameters":{"keys":{"key":[{"currentKey":"text","newKey":"summary"}]},"additionalOptions":{}},"type":"n8n-nodes-base.renameKeys","typeVersion":1,"position":[-1088,-316],"id":"e37f6f1f-8b3e-42e3-9beb-a8268b4db9a6","name":"Rename text -> summary"},{"parameters":{"promptType":"define","text":"=Summarize this tweet using the provided JSON data, your **long-term memory**, and the **Tavily search tool**. Use Tavily **only if essential** — specifically when a fact or term is **necessary to understand the tweet** but cannot be inferred from the JSON or your memory. Since Tavily queries are limited, reserve them for **high-value clarifications**, such as unclear entities, events, or acronyms.\n\n⚠️ **This summary is meant to help the creator of BunkerWeb stay informed about mentions of their product.**\n**Do not use Tavily to look up anything related to BunkerWeb**. If BunkerWeb is mentioned, rely solely on the tweet content or your memory — the purpose is to reflect how it’s being talked about, not to supplement with external context.\n\n---\n\n**Output Rules:**\n\n1. **Main Summary** (1–2 sentences):\n\n   * If both `reply_author` and `reply_text` are present (non-empty, not `\"null\"`, not `\"undefined\"`), clearly state that the summary is about the **original message**.\n   * If `possibly_sensitive` is `\"true\"`, append **(Sensitive)** at the end.\n   * Ignore whitespace artifacts, irrelevant metadata, and unused fields.\n   * Mention the author only if it’s essential for understanding.\n   * Do **not** include any fields that are empty, `\"null\"`, or `\"undefined\"`.\n   * Output must be in **plain text** only — no formatting or extra lines.\n\n2. **Reply Paragraph Rule** — applies **only if** both `reply_author` and `reply_text` are present:\n\n   * After the main summary, insert **exactly one blank line**.\n   * Clearly state that **the original message did not mention BunkerWeb directly, but the reply did**.\n   * Write **exactly one sentence** summarizing the reply’s key point, including the BunkerWeb reference.\n   * Include the reply author only if it adds meaningful context.\n\n---\n\n**Guidance:**\n\n* Always begin by interpreting the content using the JSON and your memory.\n* Use Tavily only if absolutely necessary and for specific, high-impact lookups.\n* Avoid speculation — ensure all content in the summary is directly supported by text, memory, or confirmed references.\n* Treat line breaks in the tweet as regular paragraph breaks unless used in the reply section as described above.\n\n---\n\n**Source Data Template:**\n\n```\n===== BEGIN META =====\npossibly_sensitive: {{ $json.possibly_sensitive ? \"true\" : \"false\" }}\nreply_author: {{ $json.reply_author || \"\" }}\nreply_text_present: {{ $json.reply_text && $json.reply_text !== \"null\" && $json.reply_text !== \"undefined\" ? \"true\" : \"false\" }}\ncreated_at: {{ $json.created_at || \"\" }}\nauthor_id: {{ $json.author?.id || \"\" }}\nauthor_username: {{ $json.author?.username || \"\" }}\nauthor_name: {{ $json.author?.name || \"\" }}\nverified: {{ typeof $json.author?.verified === 'boolean' ? ($json.author.verified ? 'true' : 'false') : \"\" }}\nfollowers: {{ $json.author?.followers ?? \"\" }}\nfollowing: {{ $json.author?.following ?? \"\" }}\ntweet_count: {{ $json.author?.tweet_count ?? \"\" }}\nauthor_like_count: {{ $json.author?.like_count ?? \"\" }}\nretweets: {{ $json.metrics?.retweet_count ?? \"\" }}\nreplies: {{ $json.metrics?.reply_count ?? \"\" }}\nlikes: {{ $json.metrics?.like_count ?? \"\" }}\nquotes: {{ $json.metrics?.quote_count ?? \"\" }}\nbookmarks: {{ $json.metrics?.bookmark_count ?? \"\" }}\nimpressions: {{ $json.metrics?.impression_count ?? \"\" }}\nhashtags: {{ ($json.hashtags || []).map(h => \"#\" + h).join(\", \") }}\nconversation_id: {{ $json.conversation_id || \"\" }}\ntweet_id: {{ $json.tweet_id || \"\" }}\n===== END META =====\n\n===== BEGIN TEXT =====\ntext:\n{{ $json.text || \"\" }}\n===== END TEXT =====\n\n===== BEGIN REPLY TEXT =====\nreply_text:\n{{ $json.reply_text || \"\" }}\n===== END REPLY TEXT =====\n```","needsFallback":true,"options":{}},"type":"@n8n/n8n-nodes-langchain.agent","typeVersion":2.2,"position":[376,140],"id":"980a930e-ef0f-4272-a573-58055e626d09","name":"Agent summarizer"},{"parameters":{},"type":"n8n-nodes-base.manualTrigger","typeVersion":1,"position":[-3104,556],"id":"c556898b-3ef6-4028-95d7-fb4bbb265097","name":"Clear processed IDs"},{"parameters":{"jsCode":"return Object.keys($input.first().json).map(k => {\n  return { json: { key: k } };\n});"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[-2656,556],"id":"4e399243-e2cd-4bc6-af3a-fa91717f8b8f","name":"Extract keys"},{"parameters":{"operation":"delete","key":"={{ $json.key }}"},"type":"n8n-nodes-base.redis","typeVersion":1,"position":[-2432,556],"id":"540ef67b-7c17-4a87-bb04-c276385b4700","name":"Delete extracted keys","credentials":{"redis":{"id":"AfgIqWjfLKZzroBz","name":"Redis db 1"}}},{"parameters":{"operation":"keys","keyPattern":"twitter_*"},"type":"n8n-nodes-base.redis","typeVersion":1,"position":[-2880,556],"id":"3859b2e5-e452-4fde-aa7b-4a81e3e24860","name":"Get all twitter_* keys","credentials":{"redis":{"id":"AfgIqWjfLKZzroBz","name":"Redis db 1"}}},{"parameters":{"options":{}},"type":"@n8n/n8n-nodes-langchain.lmChatGoogleGemini","typeVersion":1,"position":[256,364],"id":"16b26a10-4954-4807-85e9-e4d5138903ca","name":"Gemini 2.5 flash","credentials":{"googlePalmApi":{"id":"GNtLDT3w0YRmjHrT","name":"Gemini Api -  tdiot@bunkerity.com"}}},{"parameters":{"amount":65},"type":"n8n-nodes-base.wait","typeVersion":1.1,"position":[-416,-28],"id":"4650e161-6e27-4bfc-977c-ca70e0c8d27c","name":"Wait for the gemini API rate limit to end","webhookId":"19ce6afd-5f60-4e89-a7db-2fe2abd51c5a"},{"parameters":{"operation":"get","propertyName":"gemini_flash_executions","key":"gemini_flash_executions","options":{}},"type":"n8n-nodes-base.redis","typeVersion":1,"position":[-1088,332],"id":"8b5fbf0a-b21a-4258-b8d7-4cb8c4ebc529","name":"Get gemini flash executions","credentials":{"redis":{"id":"AfgIqWjfLKZzroBz","name":"Redis db 1"}}},{"parameters":{"mode":"combine","combineBy":"combineByPosition","options":{}},"type":"n8n-nodes-base.merge","typeVersion":3.2,"position":[-864,208],"id":"4faf39ab-f7a9-49d0-9233-d93a74ec828c","name":"Add gemini_flash_executions key"},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"loose","version":2},"conditions":[{"id":"8152c702-f81c-471b-a7bc-33c4fedc9593","leftValue":"={{ $json.gemini_flash_executions }}","rightValue":10,"operator":{"type":"number","operation":"gte"}}],"combinator":"and"},"looseTypeValidation":true,"options":{}},"type":"n8n-nodes-base.if","typeVersion":2.2,"position":[-640,208],"id":"700f7091-629c-492e-89d6-c5d242e623d1","name":"If there's been 10 executions or more"},{"parameters":{"operation":"delete","key":"gemini_flash_executions"},"type":"n8n-nodes-base.redis","typeVersion":1,"position":[-192,-100],"id":"383ea6d3-3971-4764-adfa-897d7025f0fe","name":"Delete gemini_flash_executions","credentials":{"redis":{"id":"AfgIqWjfLKZzroBz","name":"Redis db 1"}}},{"parameters":{"operation":"incr","key":"gemini_flash_executions","expire":true,"ttl":65},"type":"n8n-nodes-base.redis","typeVersion":1,"position":[-416,212],"id":"f9bdff30-4a90-4c6e-ad1c-eb6e3fab5829","name":"Increment gemini_flash_executions","credentials":{"redis":{"id":"AfgIqWjfLKZzroBz","name":"Redis db 1"}}},{"parameters":{"jsCode":"return [\n  {\n    \"data\": [\n      {\n        \"possibly_sensitive\": false,\n        \"created_at\": \"2025-08-21T21:17:09.000Z\",\n        \"id\": \"1958639533857415174\",\n        \"text\": \"@DarkWebInformer the shadow copy of your data goes not to US but in the opposit CN. BunkerWeb i prefere\",\n        \"conversation_id\": \"1958572369301119322\",\n        \"entities\": {\n          \"mentions\": [\n            {\n              \"start\": 0,\n              \"end\": 16,\n              \"username\": \"DarkWebInformer\",\n              \"id\": \"1697387633247150081\"\n            }\n          ]\n        },\n        \"public_metrics\": {\n          \"retweet_count\": 0,\n          \"reply_count\": 0,\n          \"like_count\": 0,\n          \"quote_count\": 0,\n          \"bookmark_count\": 0,\n          \"impression_count\": 174\n        },\n        \"referenced_tweets\": [\n          {\n            \"type\": \"replied_to\",\n            \"id\": \"1958572369301119322\"\n          }\n        ],\n        \"author_id\": \"2941911292\",\n        \"edit_history_tweet_ids\": [\n          \"1958639533857415174\"\n        ]\n      },\n      {\n        \"possibly_sensitive\": false,\n        \"entities\": {\n          \"annotations\": [\n            {\n              \"start\": 76,\n              \"end\": 81,\n              \"probability\": 0.6888,\n              \"type\": \"Other\",\n              \"normalized_text\": \"GitHub\"\n            }\n          ],\n          \"urls\": [\n            {\n              \"start\": 84,\n              \"end\": 107,\n              \"url\": \"https://t.co/YKMpzFJoFJ\",\n              \"expanded_url\": \"https://github.com/bunkerity/bunkerweb\",\n              \"display_url\": \"github.com/bunkerity/bunk…\",\n              \"status\": 200,\n              \"title\": \"GitHub - bunkerity/bunkerweb: 🛡️ Open-source and next-generation Web Application Firewall (WAF)\",\n              \"description\": \"🛡️ Open-source and next-generation Web Application Firewall (WAF) - bunkerity/bunkerweb\",\n              \"unwound_url\": \"https://github.com/bunkerity/bunkerweb\"\n            },\n            {\n              \"start\": 108,\n              \"end\": 131,\n              \"url\": \"https://t.co/XnghQH0gJL\",\n              \"expanded_url\": \"https://x.com/DarkWebInformer/status/1958607454985482508/video/1\",\n              \"display_url\": \"pic.x.com/XnghQH0gJL\",\n              \"media_key\": \"13_1958607194485628928\"\n            }\n          ]\n        },\n        \"created_at\": \"2025-08-21T19:09:41.000Z\",\n        \"id\": \"1958607454985482508\",\n        \"text\": \"💡BunkerWeb: Open-source and next-generation Web Application Firewall (WAF)\\n\\nGitHub: https://t.co/YKMpzFJoFJ https://t.co/XnghQH0gJL\",\n        \"conversation_id\": \"1958607454985482508\",\n        \"public_metrics\": {\n          \"retweet_count\": 7,\n          \"reply_count\": 0,\n          \"like_count\": 48,\n          \"quote_count\": 0,\n          \"bookmark_count\": 27,\n          \"impression_count\": 2987\n        },\n        \"author_id\": \"1697387633247150081\",\n        \"edit_history_tweet_ids\": [\n          \"1958607454985482508\"\n        ],\n        \"attachments\": {\n          \"media_keys\": [\n            \"13_1958607194485628928\"\n          ]\n        },\n        \"context_annotations\": [\n          {\n            \"domain\": {\n              \"id\": \"46\",\n              \"name\": \"Business Taxonomy\",\n              \"description\": \"Categories within Brand Verticals that narrow down the scope of Brands\"\n            },\n            \"entity\": {\n              \"id\": \"1557697333571112960\",\n              \"name\": \"Technology Business\",\n              \"description\": \"Brands, companies, advertisers and every non-person handle with the profit intent related to softwares, apps, communication equipments, hardwares\"\n            }\n          },\n          {\n            \"domain\": {\n              \"id\": \"30\",\n              \"name\": \"Entities [Entity Service]\",\n              \"description\": \"Entity Service top level domain, every item that is in Entity Service should be in this domain\"\n            },\n            \"entity\": {\n              \"id\": \"848920371311001600\",\n              \"name\": \"Technology\",\n              \"description\": \"Technology and computing\"\n            }\n          },\n          {\n            \"domain\": {\n              \"id\": \"66\",\n              \"name\": \"Interests and Hobbies Category\",\n              \"description\": \"A grouping of interests and hobbies entities, like Novelty Food or Destinations\"\n            },\n            \"entity\": {\n              \"id\": \"848921413196984320\",\n              \"name\": \"Computer programming\",\n              \"description\": \"Computer programming\"\n            }\n          },\n          {\n            \"domain\": {\n              \"id\": \"131\",\n              \"name\": \"Unified Twitter Taxonomy\",\n              \"description\": \"A taxonomy of user interests. \"\n            },\n            \"entity\": {\n              \"id\": \"848921413196984320\",\n              \"name\": \"Computer programming\",\n              \"description\": \"Computer programming\"\n            }\n          },\n          {\n            \"domain\": {\n              \"id\": \"45\",\n              \"name\": \"Brand Vertical\",\n              \"description\": \"Top level entities that describe a Brands industry\"\n            },\n            \"entity\": {\n              \"id\": \"781974597226799105\",\n              \"name\": \"B2B\"\n            }\n          },\n          {\n            \"domain\": {\n              \"id\": \"30\",\n              \"name\": \"Entities [Entity Service]\",\n              \"description\": \"Entity Service top level domain, every item that is in Entity Service should be in this domain\"\n            },\n            \"entity\": {\n              \"id\": \"781974597172203520\",\n              \"name\": \"Services - B2B\"\n            }\n          },\n          {\n            \"domain\": {\n              \"id\": \"47\",\n              \"name\": \"Brand\",\n              \"description\": \"Brands and Companies\"\n            },\n            \"entity\": {\n              \"id\": \"10040692468\",\n              \"name\": \"GitHub\"\n            }\n          },\n          {\n            \"domain\": {\n              \"id\": \"30\",\n              \"name\": \"Entities [Entity Service]\",\n              \"description\": \"Entity Service top level domain, every item that is in Entity Service should be in this domain\"\n            },\n            \"entity\": {\n              \"id\": \"848920371311001600\",\n              \"name\": \"Technology\",\n              \"description\": \"Technology and computing\"\n            }\n          },\n          {\n            \"domain\": {\n              \"id\": \"66\",\n              \"name\": \"Interests and Hobbies Category\",\n              \"description\": \"A grouping of interests and hobbies entities, like Novelty Food or Destinations\"\n            },\n            \"entity\": {\n              \"id\": \"848921413196984320\",\n              \"name\": \"Computer programming\",\n              \"description\": \"Computer programming\"\n            }\n          },\n          {\n            \"domain\": {\n              \"id\": \"66\",\n              \"name\": \"Interests and Hobbies Category\",\n              \"description\": \"A grouping of interests and hobbies entities, like Novelty Food or Destinations\"\n            },\n            \"entity\": {\n              \"id\": \"849075430715936768\",\n              \"name\": \"Open source\",\n              \"description\": \"Open source\"\n            }\n          },\n          {\n            \"domain\": {\n              \"id\": \"131\",\n              \"name\": \"Unified Twitter Taxonomy\",\n              \"description\": \"A taxonomy of user interests. \"\n            },\n            \"entity\": {\n              \"id\": \"849075430715936768\",\n              \"name\": \"Open source\",\n              \"description\": \"Open source\"\n            }\n          }\n        ]\n      }\n    ],\n    \"includes\": {\n      \"users\": [\n        {\n          \"id\": \"2941911292\",\n          \"name\": \"noProblem\",\n          \"username\": \"freesylex\",\n          \"created_at\": \"2014-12-26T08:17:36.000Z\",\n          \"public_metrics\": {\n            \"followers_count\": 62,\n            \"following_count\": 705,\n            \"tweet_count\": 457,\n            \"listed_count\": 2,\n            \"like_count\": 328,\n            \"media_count\": 88\n          },\n          \"verified\": false\n        },\n        {\n          \"id\": \"1697387633247150081\",\n          \"name\": \"Dark Web Informer\",\n          \"username\": \"DarkWebInformer\",\n          \"created_at\": \"2023-08-31T23:15:37.000Z\",\n          \"public_metrics\": {\n            \"followers_count\": 127131,\n            \"following_count\": 57,\n            \"tweet_count\": 24151,\n            \"listed_count\": 678,\n            \"like_count\": 22923,\n            \"media_count\": 9239\n          },\n          \"verified\": true\n        }\n      ],\n      \"tweets\": [\n        {\n          \"possibly_sensitive\": false,\n          \"entities\": {\n            \"annotations\": [\n              {\n                \"start\": 0,\n                \"end\": 7,\n                \"probability\": 0.7988,\n                \"type\": \"Other\",\n                \"normalized_text\": \"SafeLine\"\n              },\n              {\n                \"start\": 24,\n                \"end\": 26,\n                \"probability\": 0.6988,\n                \"type\": \"Other\",\n                \"normalized_text\": \"WAF\"\n              },\n              {\n                \"start\": 124,\n                \"end\": 129,\n                \"probability\": 0.6623,\n                \"type\": \"Other\",\n                \"normalized_text\": \"GitHub\"\n              }\n            ],\n            \"urls\": [\n              {\n                \"start\": 132,\n                \"end\": 155,\n                \"url\": \"https://t.co/dki1CYbTN5\",\n                \"expanded_url\": \"https://github.com/chaitin/SafeLine\",\n                \"display_url\": \"github.com/chaitin/SafeLi…\",\n                \"images\": [\n                  {\n                    \"url\": \"https://pbs.twimg.com/news_img/1958572378587308032/OUAhvSxC?format=jpg&name=orig\",\n                    \"width\": 1280,\n                    \"height\": 640\n                  },\n                  {\n                    \"url\": \"https://pbs.twimg.com/news_img/1958572378587308032/OUAhvSxC?format=jpg&name=150x150\",\n                    \"width\": 150,\n                    \"height\": 150\n                  }\n                ],\n                \"status\": 200,\n                \"title\": \"GitHub - chaitin/SafeLine: SafeLine is a self-hosted WAF(Web Application Firewall) / reverse proxy to protect your web apps from attacks and exploits.\",\n                \"description\": \"SafeLine is a self-hosted WAF(Web Application Firewall) / reverse proxy to protect your web apps from attacks and exploits. - chaitin/SafeLine\",\n                \"unwound_url\": \"https://github.com/chaitin/SafeLine\"\n              },\n              {\n                \"start\": 156,\n                \"end\": 179,\n                \"url\": \"https://t.co/JE3wupxig8\",\n                \"expanded_url\": \"https://x.com/DarkWebInformer/status/1958572369301119322/photo/1\",\n                \"display_url\": \"pic.x.com/JE3wupxig8\",\n                \"media_key\": \"3_1958572183275311104\"\n              },\n              {\n                \"start\": 156,\n                \"end\": 179,\n                \"url\": \"https://t.co/JE3wupxig8\",\n                \"expanded_url\": \"https://x.com/DarkWebInformer/status/1958572369301119322/photo/1\",\n                \"display_url\": \"pic.x.com/JE3wupxig8\",\n                \"media_key\": \"3_1958572183262752768\"\n              },\n              {\n                \"start\": 156,\n                \"end\": 179,\n                \"url\": \"https://t.co/JE3wupxig8\",\n                \"expanded_url\": \"https://x.com/DarkWebInformer/status/1958572369301119322/photo/1\",\n                \"display_url\": \"pic.x.com/JE3wupxig8\",\n                \"media_key\": \"3_1958572183346647041\"\n              },\n              {\n                \"start\": 156,\n                \"end\": 179,\n                \"url\": \"https://t.co/JE3wupxig8\",\n                \"expanded_url\": \"https://x.com/DarkWebInformer/status/1958572369301119322/photo/1\",\n                \"display_url\": \"pic.x.com/JE3wupxig8\",\n                \"media_key\": \"3_1958572183271137280\"\n              }\n            ]\n          },\n          \"created_at\": \"2025-08-21T16:50:16.000Z\",\n          \"id\": \"1958572369301119322\",\n          \"text\": \"SafeLine: A self-hosted WAF (Web Application Firewall) / reverse proxy to protect your web apps from attacks and exploits.\\n\\nGitHub: https://t.co/dki1CYbTN5 https://t.co/JE3wupxig8\",\n          \"conversation_id\": \"1958572369301119322\",\n          \"public_metrics\": {\n            \"retweet_count\": 35,\n            \"reply_count\": 3,\n            \"like_count\": 194,\n            \"quote_count\": 1,\n            \"bookmark_count\": 187,\n            \"impression_count\": 14856\n          },\n          \"author_id\": \"1697387633247150081\",\n          \"edit_history_tweet_ids\": [\n            \"1958572369301119322\"\n          ],\n          \"attachments\": {\n            \"media_keys\": [\n              \"3_1958572183275311104\",\n              \"3_1958572183262752768\",\n              \"3_1958572183346647041\",\n              \"3_1958572183271137280\"\n            ]\n          },\n          \"context_annotations\": [\n            {\n              \"domain\": {\n                \"id\": \"46\",\n                \"name\": \"Business Taxonomy\",\n                \"description\": \"Categories within Brand Verticals that narrow down the scope of Brands\"\n              },\n              \"entity\": {\n                \"id\": \"1557697333571112960\",\n                \"name\": \"Technology Business\",\n                \"description\": \"Brands, companies, advertisers and every non-person handle with the profit intent related to softwares, apps, communication equipments, hardwares\"\n              }\n            },\n            {\n              \"domain\": {\n                \"id\": \"30\",\n                \"name\": \"Entities [Entity Service]\",\n                \"description\": \"Entity Service top level domain, every item that is in Entity Service should be in this domain\"\n              },\n              \"entity\": {\n                \"id\": \"848920371311001600\",\n                \"name\": \"Technology\",\n                \"description\": \"Technology and computing\"\n              }\n            },\n            {\n              \"domain\": {\n                \"id\": \"66\",\n                \"name\": \"Interests and Hobbies Category\",\n                \"description\": \"A grouping of interests and hobbies entities, like Novelty Food or Destinations\"\n              },\n              \"entity\": {\n                \"id\": \"848921413196984320\",\n                \"name\": \"Computer programming\",\n                \"description\": \"Computer programming\"\n              }\n            },\n            {\n              \"domain\": {\n                \"id\": \"131\",\n                \"name\": \"Unified Twitter Taxonomy\",\n                \"description\": \"A taxonomy of user interests. \"\n              },\n              \"entity\": {\n                \"id\": \"848921413196984320\",\n                \"name\": \"Computer programming\",\n                \"description\": \"Computer programming\"\n              }\n            },\n            {\n              \"domain\": {\n                \"id\": \"45\",\n                \"name\": \"Brand Vertical\",\n                \"description\": \"Top level entities that describe a Brands industry\"\n              },\n              \"entity\": {\n                \"id\": \"781974597226799105\",\n                \"name\": \"B2B\"\n              }\n            },\n            {\n              \"domain\": {\n                \"id\": \"30\",\n                \"name\": \"Entities [Entity Service]\",\n                \"description\": \"Entity Service top level domain, every item that is in Entity Service should be in this domain\"\n              },\n              \"entity\": {\n                \"id\": \"781974597172203520\",\n                \"name\": \"Services - B2B\"\n              }\n            },\n            {\n              \"domain\": {\n                \"id\": \"47\",\n                \"name\": \"Brand\",\n                \"description\": \"Brands and Companies\"\n              },\n              \"entity\": {\n                \"id\": \"10040692468\",\n                \"name\": \"GitHub\"\n              }\n            }\n          ]\n        }\n      ],\n      \"media\": [\n        {\n          \"duration_ms\": 67709,\n          \"variants\": [\n            {\n              \"bit_rate\": 10368000,\n              \"content_type\": \"video/mp4\",\n              \"url\": \"https://video.twimg.com/amplify_video/1958607194485628928/vid/avc1/1920x1080/9sHBBeQ3y0oT6DZH.mp4\"\n            },\n            {\n              \"bit_rate\": 256000,\n              \"content_type\": \"video/mp4\",\n              \"url\": \"https://video.twimg.com/amplify_video/1958607194485628928/vid/avc1/480x270/pOBMFxObUhN3LZVa.mp4\"\n            },\n            {\n              \"content_type\": \"application/x-mpegURL\",\n              \"url\": \"https://video.twimg.com/amplify_video/1958607194485628928/pl/beflZ48ONnlkugMw.m3u8?v=cfc\"\n            },\n            {\n              \"bit_rate\": 2176000,\n              \"content_type\": \"video/mp4\",\n              \"url\": \"https://video.twimg.com/amplify_video/1958607194485628928/vid/avc1/1280x720/-Klyyz2T9AlixzLy.mp4\"\n            },\n            {\n              \"bit_rate\": 832000,\n              \"content_type\": \"video/mp4\",\n              \"url\": \"https://video.twimg.com/amplify_video/1958607194485628928/vid/avc1/640x360/zXneBh2fA1JYvDjJ.mp4\"\n            }\n          ],\n          \"height\": 1080,\n          \"width\": 1920,\n          \"media_key\": \"13_1958607194485628928\",\n          \"type\": \"video\",\n          \"preview_image_url\": \"https://pbs.twimg.com/amplify_video_thumb/1958607194485628928/img/O_yZYUtzgxD5ohZ9.jpg\",\n          \"public_metrics\": {\n            \"view_count\": 1036\n          }\n        }\n      ]\n    },\n    \"meta\": {\n      \"newest_id\": \"1958639533857415174\",\n      \"oldest_id\": \"1958607454985482508\",\n      \"result_count\": 2\n    }\n  }\n];"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[-3104,-784],"id":"03a25e80-861c-48dd-a123-d1e30a087f6d","name":"Cached tweets"},{"parameters":{"mode":"combine","combineBy":"combineByPosition","options":{}},"type":"n8n-nodes-base.merge","typeVersion":3.2,"position":[-192,284],"id":"0cf1b039-ec6d-4eac-bd46-19c9427021e1","name":"Merge increment"},{"parameters":{"mode":"combine","combineBy":"combineByPosition","options":{}},"type":"n8n-nodes-base.merge","typeVersion":3.2,"position":[32,-28],"id":"f7007814-ca3f-4a51-9531-631d9eb7a245","name":"Merge wait"},{"parameters":{},"type":"n8n-nodes-base.merge","typeVersion":3.2,"position":[-864,-416],"id":"936016ad-567a-4349-981f-687b5e32f888","name":"Merge all"},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"6c92d84b-d044-4b44-82ec-f1a50f31ebaa","leftValue":"={{ $json.created_at }}","rightValue":"={{ $now.minus('1', 'day') }}","operator":{"type":"dateTime","operation":"afterOrEquals"}}],"combinator":"and"},"options":{}},"type":"n8n-nodes-base.filter","typeVersion":2.2,"position":[-2432,-368],"id":"b0bfd808-031a-4f80-8eba-fe6f6f03bf43","name":"Created in the last 24H"}],"connections":{"Every day":{"main":[[{"node":"Fetch the last 100 tweets containing the BunkerWeb keyword","type":"main","index":0}]]},"Loop Over entities":{"main":[[{"node":"Merge summary","type":"main","index":1}],[{"node":"Get gemini flash executions","type":"main","index":0},{"node":"Add gemini_flash_executions key","type":"main","index":0}]]},"Get cached ID":{"main":[[{"node":"Merge cached response and entity","type":"main","index":1}]]},"Merge cached response and entity":{"main":[[{"node":"Hasn't been processed already","type":"main","index":0}]]},"Hasn't been processed already":{"main":[[{"node":"If total is under 1950 chars","type":"main","index":0}]]},"Sort by creation date":{"main":[[{"node":"Loop Over Items","type":"main","index":0}]]},"Merge summary":{"main":[[{"node":"Merge all","type":"main","index":0}]]},"Alert discord":{"main":[[{"node":"Merge tweet data with discord response","type":"main","index":1}]]},"Loop Over Items":{"main":[[],[{"node":"Merge tweet data with discord response","type":"main","index":0},{"node":"Alert discord","type":"main","index":0}]]},"Wait 1 second":{"main":[[{"node":"Loop Over Items","type":"main","index":0}]]},"Save processed ID":{"main":[[{"node":"Wait 1 second","type":"main","index":0}]]},"Redis":{"ai_memory":[[{"node":"Agent summarizer","type":"ai_memory","index":0}]]},"Tavily search":{"ai_tool":[[{"node":"Agent summarizer","type":"ai_tool","index":0}]]},"Rename output -> summary":{"main":[[{"node":"Loop Over entities","type":"main","index":0}]]},"Convert date string to datetime":{"main":[[{"node":"Sort by creation date","type":"main","index":0}]]},"Fetch the last 100 tweets containing the BunkerWeb keyword":{"main":[[{"node":"Parse tweets","type":"main","index":0}]]},"Merge tweet data with discord response":{"main":[[{"node":"Save processed ID","type":"main","index":0}]]},"Parse tweets":{"main":[[{"node":"Created in the last 24H","type":"main","index":0}]]},"If total is under 1950 chars":{"main":[[{"node":"Rename text -> summary","type":"main","index":0}],[{"node":"Merge summary","type":"main","index":0},{"node":"Loop Over entities","type":"main","index":0}]]},"llama3.2":{"ai_languageModel":[[{"node":"Agent summarizer","type":"ai_languageModel","index":1}]]},"Rename text -> summary":{"main":[[{"node":"Merge all","type":"main","index":1}]]},"Agent summarizer":{"main":[[{"node":"Rename output -> summary","type":"main","index":0}]]},"Clear processed IDs":{"main":[[{"node":"Get all twitter_* keys","type":"main","index":0}]]},"Extract keys":{"main":[[{"node":"Delete extracted keys","type":"main","index":0}]]},"Get all twitter_* keys":{"main":[[{"node":"Extract keys","type":"main","index":0}]]},"Gemini 2.5 flash":{"ai_languageModel":[[{"node":"Agent summarizer","type":"ai_languageModel","index":0}]]},"Wait for the gemini API rate limit to end":{"main":[[{"node":"Delete gemini_flash_executions","type":"main","index":0},{"node":"Merge wait","type":"main","index":1}]]},"Get gemini flash executions":{"main":[[{"node":"Add gemini_flash_executions key","type":"main","index":1}]]},"Add gemini_flash_executions key":{"main":[[{"node":"If there's been 10 executions or more","type":"main","index":0}]]},"If there's been 10 executions or more":{"main":[[{"node":"Wait for the gemini API rate limit to end","type":"main","index":0}],[{"node":"Increment gemini_flash_executions","type":"main","index":0},{"node":"Merge increment","type":"main","index":0}]]},"Cached tweets":{"main":[[]]},"Increment gemini_flash_executions":{"main":[[{"node":"Merge increment","type":"main","index":1}]]},"Merge increment":{"main":[[{"node":"Agent summarizer","type":"main","index":0}]]},"Delete gemini_flash_executions":{"main":[[{"node":"Merge wait","type":"main","index":0}]]},"Merge wait":{"main":[[{"node":"Agent summarizer","type":"main","index":0}]]},"Merge all":{"main":[[{"node":"Convert date string to datetime","type":"main","index":0}]]},"Created in the last 24H":{"main":[[{"node":"Get cached ID","type":"main","index":0},{"node":"Merge cached response and entity","type":"main","index":0}]]}},"settings":{"executionOrder":"v1"},"staticData":{"node:Every day":{"recurrenceRules":[]}},"meta":{"templateCredsSetupCompleted":true},"pinData":{},"versionId":"676d8029-a768-4a17-85c7-3ec9489007c9","triggerCount":1,"shared":[{"createdAt":"2025-09-15T15:10:15.425Z","updatedAt":"2025-09-15T15:10:15.425Z","role":"workflow:owner","workflowId":"SXJxjC8ATE04lef7","projectId":"ZjBkzD6jhnG4YX2d"}],"tags":[{"createdAt":"2025-08-13T09:13:48.874Z","updatedAt":"2025-08-13T09:13:48.874Z","id":"Af5V1Rr0ynGVFcvN","name":"Social"}]}