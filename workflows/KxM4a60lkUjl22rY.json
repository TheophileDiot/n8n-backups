{"createdAt":"2025-08-11T14:21:37.451Z","updatedAt":"2025-08-18T08:25:27.000Z","id":"KxM4a60lkUjl22rY","name":"NGINX 1.28.0 alert on debian Trixie","active":false,"isArchived":false,"nodes":[{"parameters":{"rule":{"interval":[{"field":"hours"}]}},"id":"c67929d5-7bbd-409d-ace4-4c781cdae51a","name":"Schedule","type":"n8n-nodes-base.scheduleTrigger","typeVersion":1.1,"position":[-416,-400]},{"parameters":{"method":"POST","url":"https://ntfy.batgregate900.dedyn.io/misc_alerts","authentication":"genericCredentialType","genericAuthType":"httpBearerAuth","sendHeaders":true,"headerParameters":{"parameters":[{"name":"Priority","value":"urgent"},{"name":"Title","value":"NGINX 1.28.0 is Available on Debian Trixie!"},{"name":"Tags","value":"tada"},{"name":"Click","value":"https://packages.debian.org/trixie/nginx"}]},"sendBody":true,"contentType":"raw","rawContentType":"text/markdown","body":"=The workflow has detected that the target NGINX package is now available. This workflow will now be disabled.  - **Package:** nginx - **Distribution:** Debian Trixie - **Detected Version:** 1.28.0","options":{}},"type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[928,-400],"id":"05a2aa21-c8bf-4b19-b506-78bd434a8ec5","name":"HTTP Request","alwaysOutputData":false,"credentials":{"httpBearerAuth":{"id":"B23mYSBg2gdqll26","name":"Bearer Auth account"}}},{"parameters":{"operation":"deactivate","workflowId":{"__rl":true,"value":"KxM4a60lkUjl22rY","mode":"list","cachedResultName":"NGINX 1.28.0 alert on debian Trixie (#KxM4a60lkUjl22rY)"},"requestOptions":{}},"type":"n8n-nodes-base.n8n","typeVersion":1,"position":[1376,-400],"id":"06fa1c32-771b-4dce-ab63-f0ee00ef8ea5","name":"Deactivate a workflow","credentials":{"n8nApi":{"id":"dIz8CYuPAdejfXj4","name":"n8n account"}}},{"parameters":{"authentication":"webhook","content":"@everyone âœ… NGINX 1.28.0 is Available on Debian Trixie!","options":{}},"type":"n8n-nodes-base.discord","typeVersion":2,"position":[1152,-400],"id":"beb1ce4e-4d6c-40e7-9ef1-793788c71397","name":"Discord","webhookId":"3501727e-7adf-4ec9-885d-82ab5b6ec54d","credentials":{"discordWebhookApi":{"id":"bZF2X6Ekmk7NeZSK","name":"Discord Webhook releases"}}},{"parameters":{"url":"https://nginx.org/packages/debian/dists/trixie/nginx/binary-amd64/Packages","options":{"response":{"response":{"fullResponse":true,"neverError":true}}}},"id":"f6961bf2-68ca-4783-b4ed-e15c7093a8a5","name":"Get NGINX Versions (API)1","type":"n8n-nodes-base.httpRequest","typeVersion":4.1,"position":[-192,-400]},{"parameters":{"operation":"text","options":{}},"type":"n8n-nodes-base.extractFromFile","typeVersion":1,"position":[256,-400],"id":"2dcf151e-fe77-4b80-aa25-83037328489c","name":"Extract from File"},{"parameters":{"jsCode":"// Get the first item from the incoming array.\n// This item is an object like: { \"data\": \"Package: nginx\\nVersion: ...\" }\nconst item = $input.first().json;\n\n// Safely check if the input item or its 'data' property is missing.\n// This prevents errors if the HTTP Request node ever fails.\nif (!item || typeof item.data !== 'string') {\n  console.log('No valid input item or string data found. Stopping execution.');\n  return [];\n}\n\n// Get the raw text content directly from the item's 'data' property.\nconst fileContent = item.data;\n\n// The file contains multiple package definitions, separated by two newlines.\n// We split the content into an array of these individual package blocks (\"stanzas\").\nconst packageStanzas = fileContent.split('\\n\\n');\n\n// Iterate through each package block to find our target.\nfor (const stanza of packageStanzas) {\n  // Ensure we are not processing an empty block from trailing newlines.\n  if (stanza.trim() === '') {\n    continue;\n  }\n\n  // Split the current block into individual lines for inspection.\n  const lines = stanza.split('\\n');\n\n  // Check if this block is for the correct package.\n  // We want 'Package: nginx' exactly, not 'Package: nginx-dbg'.\n  const isNginxPackage = lines.some(line => line.trim() === 'Package: nginx');\n\n  // If it's not the main nginx package, skip to the next block.\n  if (!isNginxPackage) {\n    continue;\n  }\n\n  // If we have the right package, find its version line.\n  const versionLine = lines.find(line => line.startsWith('Version:'));\n\n  if (versionLine) {\n    // Extract the version string, e.g., \"1.28.0-1~bookworm\".\n    const version = versionLine.split(':')[1].trim();\n\n    // Check if this version string contains our target \"1.28.0\".\n    if (version.includes('1.28.0')) {\n      // Success! We found the package and version.\n      // Return an object containing the found version. This allows the workflow\n      // to proceed to the next node (the alert node).\n      return [{\n        json: {\n          version: version\n        }\n      }];\n    }\n  }\n}\n\n// If the loop completes without finding \"1.28.0\" in any \"Package: nginx\" block,\n// the package is not available yet. Return an empty array to stop the workflow here.\nreturn [];"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[480,-400],"id":"b3abc661-d6e3-4d63-b90a-865a69b6986f","name":"Code"},{"parameters":{"conditions":{"string":[{"value1":"={{ $json.statusCode }}","value2":"200"}]}},"id":"3b32d17d-c541-43a9-b2cc-7d8e8360f5a9","name":"IF Request went through","type":"n8n-nodes-base.if","typeVersion":1,"position":[32,-400]},{"parameters":{"conditions":{"string":[{"value1":"={{ $json.version }}","operation":"contains","value2":"1.28.0"}]}},"id":"e0f6e289-4092-41f8-9697-d5c07bd8f92d","name":"IF Version Matches","type":"n8n-nodes-base.if","typeVersion":1,"position":[704,-400]}],"connections":{"Schedule":{"main":[[{"node":"Get NGINX Versions (API)1","type":"main","index":0}]]},"HTTP Request":{"main":[[{"node":"Discord","type":"main","index":0}]]},"Discord":{"main":[[{"node":"Deactivate a workflow","type":"main","index":0}]]},"Get NGINX Versions (API)1":{"main":[[{"node":"IF Request went through","type":"main","index":0}]]},"Extract from File":{"main":[[{"node":"Code","type":"main","index":0}]]},"Code":{"main":[[{"node":"IF Version Matches","type":"main","index":0}]]},"IF Request went through":{"main":[[{"node":"Extract from File","type":"main","index":0}]]},"IF Version Matches":{"main":[[{"node":"HTTP Request","type":"main","index":0}]]}},"settings":{"executionOrder":"v1"},"staticData":{"node:Schedule":{"recurrenceRules":[]}},"meta":{"templateCredsSetupCompleted":true},"pinData":{},"versionId":"392ff8bb-ecd2-4ac3-a03e-884157df29b3","triggerCount":1,"shared":[{"createdAt":"2025-09-15T15:10:15.425Z","updatedAt":"2025-09-15T15:10:15.425Z","role":"workflow:owner","workflowId":"KxM4a60lkUjl22rY","projectId":"ZjBkzD6jhnG4YX2d"}],"tags":[{"createdAt":"2025-08-13T13:48:32.010Z","updatedAt":"2025-08-13T13:48:32.010Z","id":"xnEbzmbsPs13DEZE","name":"Package"}]}